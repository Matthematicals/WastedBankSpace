/*
 * BSD 2-Clause License
 *
 * Copyright (c) 2021, Riley McGee
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package com.wastedbankspace.model.locations;

import com.wastedbankspace.model.StorableItem;
import lombok.Getter;
import net.runelite.api.ItemID;

@Getter
public enum FossilStorage implements StorableItem {
    UNIDENTIFIED_SMALL_FOSSIL(ItemID.UNIDENTIFIED_SMALL_FOSSIL),
    SMALL_FOSSILISED_LIMBS(ItemID.SMALL_FOSSILISED_LIMBS),
    SMALL_FOSSILISED_SPINE(ItemID.SMALL_FOSSILISED_SPINE),
    SMALL_FOSSILISED_RIBS(ItemID.SMALL_FOSSILISED_RIBS),
    SMALL_FOSSILISED_PELVIS(ItemID.SMALL_FOSSILISED_PELVIS),
    SMALL_FOSSILISED_SKULL(ItemID.SMALL_FOSSILISED_SKULL),
    UNIDENTIFIED_MEDIUM_FOSSIL(ItemID.UNIDENTIFIED_MEDIUM_FOSSIL),
    MEDIUM_FOSSILISED_LIMBS(ItemID.MEDIUM_FOSSILISED_LIMBS),
    MEDIUM_FOSSILISED_SPINE(ItemID.MEDIUM_FOSSILISED_SPINE),
    MEDIUM_FOSSILISED_RIBS(ItemID.MEDIUM_FOSSILISED_RIBS),
    MEDIUM_FOSSILISED_PELVIS(ItemID.MEDIUM_FOSSILISED_PELVIS),
    MEDIUM_FOSSILISED_SKULL(ItemID.MEDIUM_FOSSILISED_SKULL),
    UNIDENTIFIED_LARGE_FOSSIL(ItemID.UNIDENTIFIED_LARGE_FOSSIL),
    LARGE_FOSSILISED_LIMBS(ItemID.LARGE_FOSSILISED_LIMBS),
    LARGE_FOSSILISED_SPINE(ItemID.LARGE_FOSSILISED_SPINE),
    LARGE_FOSSILISED_RIBS(ItemID.LARGE_FOSSILISED_RIBS),
    LARGE_FOSSILISED_PELVIS(ItemID.LARGE_FOSSILISED_PELVIS),
    LARGE_FOSSILISED_SKULL(ItemID.LARGE_FOSSILISED_SKULL),
    FOSSILISED_ROOTS(ItemID.FOSSILISED_ROOTS),
    FOSSILISED_STUMP(ItemID.FOSSILISED_STUMP),
    FOSSILISED_BRANCH(ItemID.FOSSILISED_BRANCH),
    FOSSILISED_LEAF(ItemID.FOSSILISED_LEAF),
    FOSSILISED_MUSHROOM(ItemID.FOSSILISED_MUSHROOM),
    UNIDENTIFIED_RARE_FOSSIL(ItemID.UNIDENTIFIED_RARE_FOSSIL),
    RARE_FOSSILISED_LIMBS(ItemID.RARE_FOSSILISED_LIMBS),
    RARE_FOSSILISED_PELVIS(ItemID.RARE_FOSSILISED_PELVIS),
    RARE_FOSSILISED_RIBS(ItemID.RARE_FOSSILISED_RIBS),
    RARE_FOSSILISED_SKULL(ItemID.RARE_FOSSILISED_SKULL),
    RARE_FOSSILISED_SPINE(ItemID.RARE_FOSSILISED_SPINE),
    RARE_FOSSILISED_TUSK(ItemID.RARE_FOSSILISED_TUSK);

    private final int itemID;
    @Getter
    private final String location = "Fossil Storage";
    @Getter
    private final boolean isBis;

    FossilStorage(int itemID) {
        this.itemID = itemID;
        this.isBis = false;
    }
}
