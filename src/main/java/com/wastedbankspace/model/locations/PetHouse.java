/*
 * BSD 2-Clause License
 *
 * Copyright (c) 2021, Riley McGee
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *    list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

package com.wastedbankspace.model.locations;

import com.wastedbankspace.model.StorableItem;
import lombok.Getter;
import net.runelite.api.Item;
import net.runelite.api.ItemID;

@Getter
public enum PetHouse implements StorableItem {
    //PVM and Minigame Pets
    PET_CHAOS_ELEMENTAL(ItemID.PET_CHAOS_ELEMENTAL),
    PET_DAGANNOTH_SUPREME(ItemID.PET_DAGANNOTH_SUPREME),
    PET_DAGANNOTH_PRIME(ItemID.PET_DAGANNOTH_PRIME),
    PET_DAGANNOTH_REX(ItemID.PET_DAGANNOTH_REX),
    PET_PENANCE_QUEEN(ItemID.PET_PENANCE_QUEEN),
    PET_KREEARRA(ItemID.PET_KREEARRA),
    PET_GENERAL_GRAARDOR(ItemID.PET_GENERAL_GRAARDOR),
    PET_ZILYANA(ItemID.PET_ZILYANA),
    PET_KRIL_TSUTAROTH(ItemID.PET_KRIL_TSUTSAROTH),
    PET_BABY_MOLE(ItemID.BABY_MOLE),
    PET_PRINCE_BLACK_DRAGON(ItemID.PRINCE_BLACK_DRAGON),
    PET_KALPHITE_PRINCESS(ItemID.KALPHITE_PRINCESS),
    KALPHITE_PRINCESS_12654(ItemID.KALPHITE_PRINCESS_12654), //KQ Transmog FLying
    PET_SMOKE_DEVIL(ItemID.PET_SMOKE_DEVIL),
    PET_KRAKEN(ItemID.PET_KRAKEN),
    PET_DARK_CORE(ItemID.PET_DARK_CORE),
    CORPOREAL_CRITTER(ItemID.PET_CORPOREAL_CRITTER),
    PET_SNAKELING(ItemID.PET_SNAKELING),
    PET_SNAKELING_12939(ItemID.PET_SNAKELING_12939),
    PET_SNAKELING_12940(ItemID.PET_SNAKELING_12940),
    CHOMPY_CHICK(ItemID.CHOMPY_CHICK),
    VENENATIS_SPIDERLING(ItemID.VENENATIS_SPIDERLING),
    VENENATIS_SPIDERLING_27648(ItemID.VENENATIS_SPIDERLING_27648),
    CALLISTO_CUB(ItemID.CALLISTO_CUB),
    CALLISTO_CUB_27649(ItemID.CALLISTO_CUB_27649),
    VETION_JR(ItemID.VETION_JR),
    VETION_JR_13180(ItemID.VETION_JR_13180),
    VETION_JR_27650(ItemID.VETION_JR_27650),
    VETION_JR_27651(ItemID.VETION_JR_27651),
    SCORPIAS_OFFSPRING(ItemID.SCORPIAS_OFFSPRING),
    TZREKJAD(ItemID.TZREKJAD),
    JALREKJA(ItemID.JALREKJAD),
    HELLPUPPY(ItemID.HELLPUPPY),
    ABYSSAL_ORPHAN(ItemID.ABYSSAL_ORPHAN),
    OLMLET(ItemID.OLMLET),
    PUPPADILE(ItemID.PUPPADILE),
    TEKTINY(ItemID.TEKTINY),
    ENRAGED_TEKTINY(ItemID.ENRAGED_TEKTINY),
    VANGUARD(ItemID.VANGUARD),
    VASA_MINIRIO(ItemID.VASA_MINIRIO),
    VESPINA(ItemID.VESPINA),
    FLYING_VESPINA(ItemID.FLYING_VESPINA),
    SKOTOS(ItemID.SKOTOS),
    JALNIBREK(ItemID.JALNIBREK),
    TZREKZUK(ItemID.TZREKZUK),
    HERBI(ItemID.HERBI),
    NOON(ItemID.NOON),
    VORKI(ItemID.VORKI),
    LIL_ZIK(ItemID.LIL_ZIK),
    LIL_MAIDEN(ItemID.LIL_MAIDEN),
    LIL_BLOAT(ItemID.LIL_BLOAT),
    LIL_NYLO(ItemID.LIL_NYLO),
    LIL_SOT(ItemID.LIL_SOT),
    LIL_XARP(ItemID.LIL_XARP),
    IKKLE_HYDRA(ItemID.IKKLE_HYDRA),
    IKKLE_HYDRA_22748(ItemID.IKKLE_HYDRA_22748),
    IKKLE_HYDRA_22750(ItemID.IKKLE_HYDRA_22750),
    IKKLE_HYDRA_22752(ItemID.IKKLE_HYDRA_22752),
    SRARACHA(ItemID.SRARACHA),
    SRARACHA_25842(ItemID.SRARACHA_25842),
    SRARACHA_25843(ItemID.SRARACHA_25843),
    YOUNGLLEF(ItemID.YOUNGLLEF),
    CORRUPTED_YOUNGLLEF(ItemID.CORRUPTED_YOUNGLLEF),
    SMOLCANO(ItemID.SMOLCANO),
    LITTLE_NIGHTMARE(ItemID.LITTLE_NIGHTMARE),
    LITTLE_PARASITE(ItemID.LITTLE_PARASITE),
    LIL_CREATOR(ItemID.LIL_CREATOR),
    LIL_DESTRUCTOR(ItemID.LIL_DESTRUCTOR),
    TINY_TEMPOR(ItemID.TINY_TEMPOR),
    NEXLING(ItemID.NEXLING),
    ABYSSAL_PROTECTOR(ItemID.ABYSSAL_PROTECTOR),
    TUMEKENS_GUARDIAN(ItemID.TUMEKENS_GUARDIAN),
    TUMEKENS_DAMAGED_GUARDIAN(ItemID.TUMEKENS_DAMAGED_GUARDIAN),
    ELIDINIS_GUARDIAN(ItemID.ELIDINIS_GUARDIAN),
    ELIDINIS_DAMAGED_GUARDIAN(ItemID.ELIDINIS_DAMAGED_GUARDIAN),
    AKKHITO(ItemID.AKKHITO),
    BABI(ItemID.BABI),
    KEPHRITI(ItemID.KEPHRITI),
    ZEBO(ItemID.ZEBO),
    MUPHIN(ItemID.MUPHIN),
    WISP(ItemID.WISP),
    BUTCH(ItemID.BUTCH),
    LILVIATHAN(ItemID.LILVIATHAN),
    BARON(ItemID.BARON),
    SCURRY(ItemID.SCURRY),
    SMOL_HEREDIT(ItemID.SMOL_HEREDIT),
    QUETZIN(ItemID.QUETZIN),
    NID(ItemID.NID),
    RAX(ItemID.RAX),    //NID Transmog
    HUBERTE(ItemID.HUBERTE),
    MOXI(ItemID.MOXI),
    BRAN(ItemID.BRAN),
    RIC(ItemID.RIC),    //BRAN Transmog
    YAMI(ItemID.YAMI),
    DOM(ItemID.DOM),

    //Skilling Pets
    HERON(ItemID.HERON),
    GREAT_BLUE_HERON(ItemID.GREAT_BLUE_HERON),
    ROCK_GOLEM(ItemID.ROCK_GOLEM),
    ROCK_GOLEM_21188(ItemID.ROCK_GOLEM_21188),
    ROCK_GOLEM_21189(ItemID.ROCK_GOLEM_21189),
    ROCK_GOLEM_21190(ItemID.ROCK_GOLEM_21190),
    ROCK_GOLEM_21187(ItemID.ROCK_GOLEM_21187),
    ROCK_GOLEM_21191(ItemID.ROCK_GOLEM_21191),
    ROCK_GOLEM_21192(ItemID.ROCK_GOLEM_21192),
    ROCK_GOLEM_21193(ItemID.ROCK_GOLEM_21193),
    ROCK_GOLEM_21194(ItemID.ROCK_GOLEM_21194),
    ROCK_GOLEM_21195(ItemID.ROCK_GOLEM_21195),
    ROCK_GOLEM_21196(ItemID.ROCK_GOLEM_21196),
    ROCK_GOLEM_21197(ItemID.ROCK_GOLEM_21197),
    ROCK_GOLEM_21340(ItemID.ROCK_GOLEM_21340),
    ROCK_GOLEM_21358(ItemID.ROCK_GOLEM_21358),
    ROCK_GOLEM_21359(ItemID.ROCK_GOLEM_21359),
    ROCK_GOLEM_21360(ItemID.ROCK_GOLEM_21360),
    BEAVER(ItemID.BEAVER),
    BEAVER_28229(ItemID.BEAVER_28229),
    BEAVER_28230(ItemID.BEAVER_28230),
    BEAVER_28231(ItemID.BEAVER_28231),
    BEAVER_28232(ItemID.BEAVER_28232),
    BEAVER_28233(ItemID.BEAVER_28233),
    BEAVER_28234(ItemID.BEAVER_28234),
    BEAVER_28235(ItemID.BEAVER_28235),
    BEAVER_28236(ItemID.BEAVER_28236),
    BEAVER_28237(ItemID.BEAVER_28237),
    FOX_28670(ItemID.FOX_28670),
    PHEASANT(ItemID.PHEASANT),
    BABY_CHINCHOMPA(ItemID.BABY_CHINCHOMPA),
    BABY_CHINCHOMPA_13324(ItemID.BABY_CHINCHOMPA_13324),
    BABY_CHINCHOMPA_13325(ItemID.BABY_CHINCHOMPA_13325),
    BABY_CHINCHOMPA_13326(ItemID.BABY_CHINCHOMPA_13326),
    BLOODHOUND(ItemID.BLOODHOUND),
    GIANT_SQUIRREL(ItemID.GIANT_SQUIRREL),
    DARK_SQUIRREL(ItemID.DARK_SQUIRREL),
    BONE_SQUIRREL(ItemID.BONE_SQUIRREL),
    TANGLEROOT(ItemID.TANGLEROOT),
    TANGLEROOT_24555(ItemID.TANGLEROOT_24555),
    TANGLEROOT_24557(ItemID.TANGLEROOT_24557),
    TANGLEROOT_24559(ItemID.TANGLEROOT_24559),
    TANGLEROOT_24561(ItemID.TANGLEROOT_24561),
    TANGLEROOT_24563(ItemID.TANGLEROOT_24563),
    RIFT_GUARDIAN(ItemID.RIFT_GUARDIAN),
    RIFT_GUARDIAN_20667(ItemID.RIFT_GUARDIAN_20667),
    RIFT_GUARDIAN_20669(ItemID.RIFT_GUARDIAN_20669),
    RIFT_GUARDIAN_20671(ItemID.RIFT_GUARDIAN_20671),
    RIFT_GUARDIAN_20673(ItemID.RIFT_GUARDIAN_20673),
    RIFT_GUARDIAN_20675(ItemID.RIFT_GUARDIAN_20675),
    RIFT_GUARDIAN_20677(ItemID.RIFT_GUARDIAN_20677),
    RIFT_GUARDIAN_20679(ItemID.RIFT_GUARDIAN_20679),
    RIFT_GUARDIAN_20681(ItemID.RIFT_GUARDIAN_20681),
    RIFT_GUARDIAN_20683(ItemID.RIFT_GUARDIAN_20683),
    RIFT_GUARDIAN_20685(ItemID.RIFT_GUARDIAN_20685),
    RIFT_GUARDIAN_20687(ItemID.RIFT_GUARDIAN_20687),
    RIFT_GUARDIAN_20689(ItemID.RIFT_GUARDIAN_20689),
    RIFT_GUARDIAN_21990(ItemID.RIFT_GUARDIAN_21990),
    RIFT_GUARDIAN_20691(ItemID.RIFT_GUARDIAN_20691),
    GREATISH_GUARDIAN(ItemID.GREATISH_GUARDIAN),
    ROCKY(ItemID.ROCKY),
    RED(ItemID.RED),
    ZIGGY(ItemID.ZIGGY),
    PHOENIX(ItemID.PHOENIX),
    PHOENIX_24483(ItemID.PHOENIX_24483),
    PHOENIX_24484(ItemID.PHOENIX_24484),
    PHOENIX_24485(ItemID.PHOENIX_24485),
    PHOENIX_24486(ItemID.PHOENIX_24486),

    // Extras
    PET_KITTEN(ItemID.PET_KITTEN),
    PET_KITTEN_1556(ItemID.PET_KITTEN_1556),
    PET_KITTEN_1557(ItemID.PET_KITTEN_1557),
    PET_KITTEN_1558(ItemID.PET_KITTEN_1558),
    PET_KITTEN_1559(ItemID.PET_KITTEN_1559),
    PET_KITTEN_1560(ItemID.PET_KITTEN_1560),
    PET_CAT(ItemID.PET_CAT),
    PET_CAT_1562(ItemID.PET_CAT_1562),
    PET_CAT_1563(ItemID.PET_CAT_1563),
    PET_CAT_1564(ItemID.PET_CAT_1564),
    PET_CAT_1565(ItemID.PET_CAT_1565),
    PET_CAT_1566(ItemID.PET_CAT_1566),
    PET_CAT_1567(ItemID.PET_CAT_1567), // overgrown
    PET_CAT_1568(ItemID.PET_CAT_1568), // overgrown
    PET_CAT_1569(ItemID.PET_CAT_1569), // overgrown
    PET_CAT_1570(ItemID.PET_CAT_1570), // overgrown
    PET_CAT_1571(ItemID.PET_CAT_1571), // overgrown
    PET_CAT_1572(ItemID.PET_CAT_1572), // overgrown
    WILY_CAT(ItemID.WILY_CAT),
    WILY_CAT_6556(ItemID.WILY_CAT_6556),
    WILY_CAT_6557(ItemID.WILY_CAT_6557),
    WILY_CAT_6558(ItemID.WILY_CAT_6558),
    WILY_CAT_6559(ItemID.WILY_CAT_6559),
    WILY_CAT_6560(ItemID.WILY_CAT_6560),
    LAZY_CAT(ItemID.LAZY_CAT),
    LAZY_CAT_6550(ItemID.LAZY_CAT_6550),
    LAZY_CAT_6551(ItemID.LAZY_CAT_6551),
    LAZY_CAT_6552(ItemID.LAZY_CAT_6552),
    LAZY_CAT_6553(ItemID.LAZY_CAT_6553),
    LAZY_CAT_6554(ItemID.LAZY_CAT_6554),
    HELLKITTEN(ItemID.HELLKITTEN),
    HELL_CAT(ItemID.HELL_CAT),
    OVERGROWN_HELLCAT(ItemID.OVERGROWN_HELLCAT),
    WILY_HELLCAT(ItemID.WILY_HELLCAT),
    LAZY_HELL_CAT(ItemID.LAZY_HELL_CAT),
    TOY_CAT(ItemID.TOY_CAT),
    FISHBOWL_6670(ItemID.FISHBOWL_6670),
    FISHBOWL_6671(ItemID.FISHBOWL_6671),
    FISHBOWL_6672(ItemID.FISHBOWL_6672),
    PET_ROCK(ItemID.PET_ROCK),
    EGG_30970(ItemID.EGG_30970), //Humphry Dumphry
    BROAV(ItemID.BROAV);

    private final int itemID;
    @Getter
    private final String location = "Pet House";
    @Getter
    private final boolean isBis;
    PetHouse(int itemID) {
        this.itemID = itemID;
        this.isBis = false;
    }
}
